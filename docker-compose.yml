version: '3.7'

services:
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_DB: $POSTGRES_DB
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: always

  redis:
    image: "redis:latest"
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
        - redis_data:/data
    restart: always

  django:
    build:
      context: ./django
      dockerfile: Dockerfile
    container_name: django
    environment:
      SECRET_KEY: $SECRET_KEY
      POSTGRES_DB: $POSTGRES_DB
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
    volumes:
      - ./django:/app
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    restart: always
  
  react:
    build:
      context: ./react
      dockerfile: Dockerfile
    container_name: react
    volumes:
      - ./react:/app
    ports:
      - "5173:5173"
    depends_on:
      - django
    restart: always

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    ports:
      - 9090:9090
    depends_on:
      - django
    restart: always


  grafana:
    image: grafana/grafana-enterprise:latest
    container_name: grafana
    volumes:
      - ./grafana:/etc/grafana/provisioning/datasources
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana
    ports:
      - '9999:3000'
    depends_on:
      - prometheus
    restart: always

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:
