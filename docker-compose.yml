version: '3.7'

networks:
  nei:
    driver: bridge

volumes:
  postgres_data:
  redis_data:

services:
  postgres:
    image: postgres:16.1
    container_name: postgres
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: "2"
    environment:
      POSTGRES_DB: $POSTGRES_DB
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - nei
    ports:
      - "127.0.0.1:5432:5432"
    restart: always

  redis:
    image: redis:7.2.3
    container_name: redis
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: "1"
    volumes:
      - redis_data:/data
    networks:
      - nei
    restart: always

  django:
    build:
      context: ./django
      dockerfile: Dockerfile
    container_name: django
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: "2"
    environment:
      SECRET_KEY: $SECRET_KEY
      POSTGRES_DB: $POSTGRES_DB
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
    volumes:
      - ./django:/app
    networks:
      - nei
    ports:
      - "127.0.0.1:8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: always
  
  react:
    build:
      context: ./react
      dockerfile: Dockerfile
    container_name: react
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: "2"
    volumes:
      - ./react:/app
    networks:
      - nei
    ports:
      - "127.0.0.1:5173:5173"
    depends_on:
      django:
        condition: service_healthy
    restart: always
